/**
 * This class is generated by jOOQ
 */
package io.pturczyk.jooq.domain.tables;


import io.pturczyk.jooq.domain.Keys;
import io.pturczyk.jooq.domain.Publib;
import io.pturczyk.jooq.domain.tables.records.AuthorsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Authors extends TableImpl<AuthorsRecord> {

    private static final long serialVersionUID = -1533888221;

    /**
     * The reference instance of <code>publib.authors</code>
     */
    public static final Authors AUTHORS = new Authors();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthorsRecord> getRecordType() {
        return AuthorsRecord.class;
    }

    /**
     * The column <code>publib.authors.a_id</code>.
     */
    public final TableField<AuthorsRecord, Integer> A_ID = createField("a_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('publib.authors_a_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>publib.authors.a_first_name</code>.
     */
    public final TableField<AuthorsRecord, String> A_FIRST_NAME = createField("a_first_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>publib.authors.a_last_name</code>.
     */
    public final TableField<AuthorsRecord, String> A_LAST_NAME = createField("a_last_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>publib.authors</code> table reference
     */
    public Authors() {
        this("authors", null);
    }

    /**
     * Create an aliased <code>publib.authors</code> table reference
     */
    public Authors(String alias) {
        this(alias, AUTHORS);
    }

    private Authors(String alias, Table<AuthorsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Authors(String alias, Table<AuthorsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Publib.PUBLIB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AuthorsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AUTHORS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthorsRecord> getPrimaryKey() {
        return Keys.AUTHORS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthorsRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthorsRecord>>asList(Keys.AUTHORS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Authors as(String alias) {
        return new Authors(alias, this);
    }

    /**
     * Rename this table
     */
    public Authors rename(String name) {
        return new Authors(name, null);
    }
}
